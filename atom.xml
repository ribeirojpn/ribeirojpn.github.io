<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>RibeiroJPN</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://ribeirojpn.github.io/"/>
  <updated>2016-07-31T23:05:55.510Z</updated>
  <id>http://ribeirojpn.github.io/</id>
  
  <author>
    <name>Joao Paulo Ribeiro</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Weeklies and Podcasts</title>
    <link href="http://ribeirojpn.github.io/uncategorized/weeklies-and-podcasts/"/>
    <id>http://ribeirojpn.github.io/uncategorized/weeklies-and-podcasts/</id>
    <published>2016-07-07T03:21:51.000Z</published>
    <updated>2016-07-31T23:05:55.510Z</updated>
    
    <content type="html">&lt;p&gt;Weeklies e Podcasts são ótimos recursos para se manter atualizado sobre as novidades. Weeklies oferecem uma serie de noticias, artigos e tutoriais novos e muito uteis semanalmente. Já com os Podcasts você se atualiza, aprende e se descontrai ouvindo a discussões e entrevistas, enquanto realiza suas tarefas cotidianas.&lt;/p&gt;
&lt;p&gt;Estes são os Podcasts e Weeklies que acompanho:&lt;/p&gt;
&lt;h2 id=&quot;Podcasts&quot;&gt;&lt;a href=&quot;#Podcasts&quot; class=&quot;headerlink&quot; title=&quot;Podcasts&quot;&gt;&lt;/a&gt;Podcasts&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://zofe.com.br/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Zone Of Front-Enders&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://devnaestrada.com.br/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DevNaEstrada&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.codenewbie.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CodeNewbie&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://devchat.tv/js-jabber&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;JavaScript Jabber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.lambda3.com.br/category/podcast/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Lambda3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Saindo um pouco do “escopo” de desenvolvimento:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jovemnerd.com.br/nerdcast/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NerdCast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://jovemnerd.com.br/mrg/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Matando Robôs Gigantes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Weeklies&quot;&gt;&lt;a href=&quot;#Weeklies&quot; class=&quot;headerlink&quot; title=&quot;Weeklies&quot;&gt;&lt;/a&gt;Weeklies&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://javascriptweekly.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;JavaScript Weekly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://nodeweekly.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Node Weekly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://weekly.udgwebdev.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;UdgWebDev Weekly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://braziljs.org/#weekly&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;BrasilJS Weekly&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Weeklies e Podcasts são ótimos recursos para se manter atualizado sobre as novidades. Weeklies oferecem uma serie de noticias, artigos e 
    
    </summary>
    
    
      <category term="dicas" scheme="http://ribeirojpn.github.io/tags/dicas/"/>
    
  </entry>
  
  <entry>
    <title>Basico de uma API com GraphQL e Node.js</title>
    <link href="http://ribeirojpn.github.io/graphq/graphql-api-node/"/>
    <id>http://ribeirojpn.github.io/graphq/graphql-api-node/</id>
    <published>2016-06-17T03:16:00.000Z</published>
    <updated>2016-07-05T20:36:43.521Z</updated>
    
    <content type="html">&lt;p&gt;GraphQL é uma linguagem de consulta de dados desenvolvida e usado pelo Facebook para realizar requisições e entregar informações para aplicações web e mobile desde 2012. GraphQL facilita o processo de entregar ao client apenas o que foi requisitado pelo mesmo e na ordem em que foi requisitado.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Exemplo&lt;/em&gt;:&lt;/p&gt;
&lt;p&gt;Se temos um objeto &lt;code&gt;User&lt;/code&gt;:&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Joao&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;full_name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Joao Paulo&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;city&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Campina Grande&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;tag&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;ribeirojpn&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;url&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;https://twitter.com/ribeirojpn&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;knowledge&quot;&lt;/span&gt;: [&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;string&quot;&gt;&quot;language&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Javascript&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;string&quot;&gt;&quot;frameworks&quot;&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&quot;express.js&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;hapi.js&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;AngularJS&quot;&lt;/span&gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;string&quot;&gt;&quot;language&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Java&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;string&quot;&gt;&quot;frameworks&quot;&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&quot;Play&quot;&lt;/span&gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;string&quot;&gt;&quot;language&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Python&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;string&quot;&gt;&quot;frameworks&quot;&lt;/span&gt;: []&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Podemos solicitar apenas os dados &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;age&lt;/code&gt;, &lt;code&gt;city&lt;/code&gt; e as linguagens que o usuário possui conhecimento(&lt;code&gt;knowledge.language&lt;/code&gt;) ao fazer a seguinte requisição para o servidor:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;query &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	user(name:&lt;span class=&quot;string&quot;&gt;&quot;Joao&quot;&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		name&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		age&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		city&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		knowledge &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			language&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Retornando:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;data&quot;&lt;/span&gt;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;user&quot;&lt;/span&gt;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Joao&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;city&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Campina Grande&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;knowledge&quot;&lt;/span&gt;: [&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &lt;span class=&quot;string&quot;&gt;&quot;language&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Javascript&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &lt;span class=&quot;string&quot;&gt;&quot;language&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Java&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &lt;span class=&quot;string&quot;&gt;&quot;language&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Python&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      ]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Se eu também quiser que retorne os frameworks basta adicionar &lt;code&gt;frameworks&lt;/code&gt; dentro do bloco de &lt;code&gt;knowledge&lt;/code&gt;, ficando assim:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;query &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	user(name:&lt;span class=&quot;string&quot;&gt;&quot;Joao&quot;&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		name&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		age&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		city&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		knowledge &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			language&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			frameworks&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Retornando:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;data&quot;&lt;/span&gt;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;user&quot;&lt;/span&gt;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Joao&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;city&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Campina Grande&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;knowledge&quot;&lt;/span&gt;: [&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &lt;span class=&quot;string&quot;&gt;&quot;language&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Javascript&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &lt;span class=&quot;string&quot;&gt;&quot;frameworks&quot;&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&quot;express.js&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;hapi.js&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;AngularJS&quot;&lt;/span&gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &lt;span class=&quot;string&quot;&gt;&quot;language&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Java&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &lt;span class=&quot;string&quot;&gt;&quot;frameworks&quot;&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&quot;Play&quot;&lt;/span&gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &lt;span class=&quot;string&quot;&gt;&quot;language&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Python&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &lt;span class=&quot;string&quot;&gt;&quot;frameworks&quot;&lt;/span&gt;: []&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      ]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Essas requisições podem ser feitas pelo client utilizando o método &lt;code&gt;GET&lt;/code&gt;, a url da requisição na rota &lt;code&gt;/graphql&lt;/code&gt; do exemplo acima seria igual a:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/graphql?query=&amp;#123;user(name:&lt;span class=&quot;string&quot;&gt;&quot;user&quot;&lt;/span&gt;)&amp;#123;name,age,city,knowledge&amp;#123;language,frameworks&amp;#125;&amp;#125;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;OBS&lt;/strong&gt;: GraphQL ainda é uma novidade e não achei muito sobre boas praticas. Assim que ficar sabendo mais a respeito, postarei aqui. ^^&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Usando-GraphQL-no-Node-js&quot;&gt;&lt;a href=&quot;#Usando-GraphQL-no-Node-js&quot; class=&quot;headerlink&quot; title=&quot;Usando GraphQL no Node.js&quot;&gt;&lt;/a&gt;Usando GraphQL no Node.js&lt;/h2&gt;&lt;p&gt;Vamos usar o &lt;a href=&quot;https://github.com/graphql/graphql-js&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;graphql-js&lt;/a&gt; e o &lt;a href=&quot;https://github.com/graphql/express-graphql&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;express-graphql&lt;/a&gt; para criarmos uma ‘mini-API’.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;graphql-js é a implementação do GraphQL no javascript&lt;/li&gt;
&lt;li&gt;express-graphql é um middleware que costumiza o sevidor HTTP do express para ter suporte ao estilo do GraphQL&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ npm init&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ npm install express graphql express-graphql --save&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Usaremos os dados abaixo em um arquivo chamado &lt;code&gt;users.json&lt;/code&gt;:&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Joao&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;&quot;knowledge&quot;&lt;/span&gt;: [&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;string&quot;&gt;&quot;language&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Javascript&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;string&quot;&gt;&quot;frameworks&quot;&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&quot;express.js&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;hapi.js&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;AngularJS&quot;&lt;/span&gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;string&quot;&gt;&quot;language&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Java&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;string&quot;&gt;&quot;frameworks&quot;&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&quot;Play&quot;&lt;/span&gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;string&quot;&gt;&quot;language&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Python&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;string&quot;&gt;&quot;frameworks&quot;&lt;/span&gt;: []&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Maria&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;&quot;knowledge&quot;&lt;/span&gt;: [&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;string&quot;&gt;&quot;language&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Javascript&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;string&quot;&gt;&quot;frameworks&quot;&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&quot;ReactJS&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;AngularJS&quot;&lt;/span&gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;string&quot;&gt;&quot;language&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Java&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;string&quot;&gt;&quot;frameworks&quot;&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&quot;Play&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Spring&quot;&lt;/span&gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;string&quot;&gt;&quot;language&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Python&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;string&quot;&gt;&quot;frameworks&quot;&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&quot;Django&quot;&lt;/span&gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Ana&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;&quot;knowledge&quot;&lt;/span&gt;: [&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;string&quot;&gt;&quot;language&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Javascript&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;string&quot;&gt;&quot;frameworks&quot;&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&quot;ReactJS&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;express.js&quot;&lt;/span&gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;string&quot;&gt;&quot;language&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Ruby&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;string&quot;&gt;&quot;frameworks&quot;&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&quot;Ruby on Rails&quot;&lt;/span&gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;string&quot;&gt;&quot;language&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Python&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;string&quot;&gt;&quot;frameworks&quot;&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&quot;Django&quot;&lt;/span&gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;]&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Criaremos um arquivo chamado &lt;code&gt;schema.js&lt;/code&gt; com o seguinte código:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; graphql = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;graphql&#39;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; users = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;./user.json&#39;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; knowledgeType = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; graphql.GraphQLObjectType(&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  name:&lt;span class=&quot;string&quot;&gt;&#39;Knowledge&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  fields: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		language: &amp;#123; type: graphql.GraphQLString &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		frameworks: &amp;#123; type: &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; graphql.GraphQLList(graphql.GraphQLString ) &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; userType = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; graphql.GraphQLObjectType(&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  name: &lt;span class=&quot;string&quot;&gt;&#39;User&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	fields: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		id: &amp;#123; type: &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; graphql.GraphQLNonNull(graphql.GraphQLInt) &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		name: &amp;#123; type: &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; graphql.GraphQLNonNull(graphql.GraphQLString) &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		full_name: &amp;#123; type: graphql.GraphQLString &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		age: &amp;#123; type: graphql.GraphQLInt &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		city: &amp;#123; type: graphql.GraphQLString &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		tag: &amp;#123; type: graphql.GraphQLString &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		url: &amp;#123; type: graphql.GraphQLString &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		knowledge: &amp;#123; type: &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; graphql.GraphQLList(knowledgeType) &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; schema = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; graphql.GraphQLSchema(&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	query: &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; graphql.GraphQLObjectType(&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    name: &lt;span class=&quot;string&quot;&gt;&#39;Query&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    fields: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		  user: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				type: userType,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      	args: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          id:&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            type: graphql.GraphQLInt&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        resolve: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;_ , args&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; response = users.find(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;user&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;						&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (user.id === args.id)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					&amp;#125;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; response&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = schema&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;No código acima criamos dois &lt;a href=&quot;http://graphql.org/docs/api-reference-type-system/#graphqlobjecttype&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;GraphQLObjectType&lt;/code&gt;&lt;/a&gt; chamados de &lt;code&gt;userType&lt;/code&gt; e &lt;code&gt;knowledgeType&lt;/code&gt;, eles funcionam como ‘models’ para o &lt;code&gt;schema&lt;/code&gt;. Precisamos criar um tipo especifico para ‘knowledge’ para que possamos solicitar apenas parte dos dados desse campo, como no exemplo anterior.&lt;/p&gt;
&lt;p&gt;O &lt;code&gt;schema&lt;/code&gt; é um objeto do tipo &lt;a href=&quot;http://graphql.org/docs/api-reference-type-system/#graphqlschema&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;GraphQLSchema&lt;/code&gt;&lt;/a&gt; que recebe um &lt;code&gt;GraphQLObjectType&lt;/code&gt; com as propriedades &lt;code&gt;name&lt;/code&gt; e &lt;code&gt;fields&lt;/code&gt;. Em &lt;code&gt;fields&lt;/code&gt; ficam os métodos que serão usados na query. No nosso caso, temos &lt;code&gt;user&lt;/code&gt; que vai usar o &lt;code&gt;userType&lt;/code&gt; passado na propriedade &lt;code&gt;type&lt;/code&gt; como tipo de dado a ser manipulado e em &lt;code&gt;args&lt;/code&gt; passamos os argumentos que este método deve receber para realizar a operação como propriedades que recebem de qual tipo esse argumento será, no caso acima temos o argumento &lt;code&gt;id&lt;/code&gt; que será do tipo &lt;code&gt;int&lt;/code&gt;. A propriedade &lt;code&gt;resolve&lt;/code&gt; de &lt;code&gt;user&lt;/code&gt; recebe uma função, está função será responsável por buscar e retornar o usuário que possui a &lt;code&gt;id&lt;/code&gt; passada como argumento.&lt;/p&gt;
&lt;p&gt;Agora, criaremos o arquivo &lt;code&gt;index.js&lt;/code&gt; onde iniciaremos o servidor e determinaremos a rota que usará o &lt;code&gt;schema&lt;/code&gt; que acabamos de criar. O código de &lt;code&gt;index.js&lt;/code&gt; será este:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; graphql = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;graphql&#39;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; graphqlHTTP = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;express-graphql&#39;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; express = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;express&#39;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; users = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;./schema&#39;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; app = express()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;app.use(&lt;span class=&quot;string&quot;&gt;&#39;/user&#39;&lt;/span&gt;, graphqlHTTP(&amp;#123;schema:users, pretty: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&amp;#125;))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;app.listen(&lt;span class=&quot;number&quot;&gt;3000&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;Server on.&#39;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Aqui iniciamos o servidor com express na porta &lt;code&gt;3000&lt;/code&gt; e criamos uma rota para &lt;code&gt;/user&lt;/code&gt; passando a função &lt;code&gt;graphqlHTTP({schema:users, pretty: true})&lt;/code&gt;&lt;br&gt;para ser chamado sempre que for realizada uma requisição nessa rota. Foi passado um objeto com a propriedade &lt;code&gt;schema&lt;/code&gt; com o schema que criamos em &lt;code&gt;schema.js&lt;/code&gt; como valor dessa propriedade. Essa função se responsabiliza por verificar a requisição e executar a &lt;code&gt;resolve&lt;/code&gt; referente a propriedade passada na requisição.&lt;/p&gt;
&lt;p&gt;Inicie o servidor no seu terminal:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;node index.js&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;E acesse a seguinte url no seu browser:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;http://localhost:3000/user?query=&amp;#123;user(id:2)&amp;#123;id,name,age,knowledge&amp;#123;language,frameworks&amp;#125;&amp;#125;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Você deve receber isso:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;data&quot;&lt;/span&gt;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;user&quot;&lt;/span&gt;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Maria&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;knowledge&quot;&lt;/span&gt;: [&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &lt;span class=&quot;string&quot;&gt;&quot;language&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Javascript&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &lt;span class=&quot;string&quot;&gt;&quot;frameworks&quot;&lt;/span&gt;: [&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&quot;ReactJS&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&quot;AngularJS&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          ]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &lt;span class=&quot;string&quot;&gt;&quot;language&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Java&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &lt;span class=&quot;string&quot;&gt;&quot;frameworks&quot;&lt;/span&gt;: [&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&quot;Play&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&quot;Spring&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          ]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &lt;span class=&quot;string&quot;&gt;&quot;language&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Python&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &lt;span class=&quot;string&quot;&gt;&quot;frameworks&quot;&lt;/span&gt;: [&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&quot;Django&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          ]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      ]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Experimente variar as propriedades solicitadas e veja o que retorna:&lt;br&gt;&lt;figure class=&quot;highlight xquery&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;http://localhost:&lt;span class=&quot;number&quot;&gt;3000&lt;/span&gt;/user?query=&amp;#123;user(id:&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&amp;#123;id,name,age,knowledge&amp;#123;language,frameworks&amp;#125;&amp;#125;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;http://localhost:&lt;span class=&quot;number&quot;&gt;3000&lt;/span&gt;/user?query=&amp;#123;user(id:&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)&amp;#123;id,name,age,knowledge&amp;#123;language&amp;#125;&amp;#125;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;http://localhost:&lt;span class=&quot;number&quot;&gt;3000&lt;/span&gt;/user?query=&amp;#123;user(id:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&amp;#123;id,knowledge&amp;#123;language,frameworks&amp;#125;&amp;#125;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;http://localhost:&lt;span class=&quot;number&quot;&gt;3000&lt;/span&gt;/user?query=&amp;#123;user(id:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&amp;#123;id,name,age&amp;#125;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;http://localhost:&lt;span class=&quot;number&quot;&gt;3000&lt;/span&gt;/user?query=&amp;#123;user(id:&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&amp;#123;id,name,age,knowledge&amp;#123;&amp;#125;&amp;#125;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;A Propriedade &lt;code&gt;query&lt;/code&gt; em &lt;code&gt;schema&lt;/code&gt; recebe em &lt;code&gt;fields&lt;/code&gt; os métodos que serão chamados em requisições &lt;code&gt;GET&lt;/code&gt;, como no nosso caso &lt;code&gt;user&lt;/code&gt; que ira retornar o usuário através da função declarada na propriedade de &lt;code&gt;user&lt;/code&gt; chamada &lt;code&gt;resolve&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Mas e pra retornar a lista com todos os usuários? Simples, basta adicionarmos o código abaixo como outra propriedade de &lt;code&gt;fields&lt;/code&gt;:&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;users: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	type: &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; graphql.GraphQLList(userType),&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	resolve: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;_ , args&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; users&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Assim passamos a ter dois métodos de query no schema, &lt;code&gt;user&lt;/code&gt; que retorna o usuário com a id passada como argumento e &lt;code&gt;users&lt;/code&gt; que retorna a lista com todos os usuários. Experimente:&lt;/p&gt;
&lt;figure class=&quot;highlight xquery&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;http://localhost:&lt;span class=&quot;number&quot;&gt;3000&lt;/span&gt;/user?query=&amp;#123;users&amp;#123;id,name,age,knowledge&amp;#123;language,frameworks&amp;#125;&amp;#125;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Essa url tem uma query no seguinte formato:&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;query &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	users &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		id&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		name&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		age&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		knowledge &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			language&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			frameworks&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Ficou faltando falar de criar, atualizar e deletar dados, certo? não se preocupe, farei outro post falando sobre isso porque este já ficou bem extenso. Até mais!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Fontes:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://graphql.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://graphql.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://code.facebook.com/posts/1691455094417024/graphql-a-data-query-language/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://code.facebook.com/posts/1691455094417024/graphql-a-data-query-language/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;GraphQL é uma linguagem de consulta de dados desenvolvida e usado pelo Facebook para realizar requisições e entregar informações para apl
    
    </summary>
    
      <category term="graphq" scheme="http://ribeirojpn.github.io/categories/graphq/"/>
    
    
      <category term="api" scheme="http://ribeirojpn.github.io/tags/api/"/>
    
      <category term="nodejs" scheme="http://ribeirojpn.github.io/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>Json Web Token no Play Framework(Java)</title>
    <link href="http://ribeirojpn.github.io/java/json-web-token-play/"/>
    <id>http://ribeirojpn.github.io/java/json-web-token-play/</id>
    <published>2016-05-25T00:16:01.000Z</published>
    <updated>2016-07-05T14:09:54.088Z</updated>
    
    <content type="html">&lt;p&gt;Trabalhando em um projeto da universidade fiquei responsável por desenvolver a autenticação de usuários por token em uma REST API. Escolhi utilizar o Json Web Token para gerar os tokens quando o usuário se conecta ou se registra no sistema. Esses tokens devem ser passados em todas as requisições feitas pelo usuário ao sistema e devem ter validade de 24h.&lt;/p&gt;
&lt;h2 id=&quot;Instalando-o-Java-JWT&quot;&gt;&lt;a href=&quot;#Instalando-o-Java-JWT&quot; class=&quot;headerlink&quot; title=&quot;Instalando o Java JWT&quot;&gt;&lt;/a&gt;Instalando o Java JWT&lt;/h2&gt;&lt;p&gt;Utilizei a biblioteca Java JWT para criar e verificar os JWTs. Para instalar no Play Framework é bem simples, basta adicionar a biblioteca como dependência no &lt;code&gt;build.sbt&lt;/code&gt;:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;libraryDependencies += &lt;span class=&quot;string&quot;&gt;&quot;io.jsonwebtoken&quot;&lt;/span&gt; % &lt;span class=&quot;string&quot;&gt;&quot;jjwt&quot;&lt;/span&gt; % &lt;span class=&quot;string&quot;&gt;&quot;0.5&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;Gerando o token com o Java JWT&lt;br&gt;Utilizei métodos estáticos da classe &lt;code&gt;Jwts&lt;/code&gt; do pacote &lt;code&gt;io.jsonbwetoken&lt;/code&gt; para configurar e gerar o token.&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; io.jsonwebtoken.Jwts;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; io.jsonwebtoken.SignatureAlgorithm;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; io.jsonwebtoken.impl.crypto.MacProvider;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.security.Key;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Key key = MacProvider.generateKey();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Date dateNow = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Date();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Date expires = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Date(dateNow.getTime() + &lt;span class=&quot;number&quot;&gt;86400000&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;String email = &lt;span class=&quot;string&quot;&gt;&quot;user@email.com&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;String token = Jwts.builder().setSubject(email)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                             .signWith(SignatureAlgorithm.HS256, key)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                             .setExpiration(expires).compact();&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Comecei a configuração determinando o &lt;code&gt;subject&lt;/code&gt;, que é a informação que será codificada, passando o email do usuário em &lt;code&gt;setSubject(email)&lt;/code&gt;. Determinei a data de validade passando um objeto do tipo &lt;code&gt;Date&lt;/code&gt; em &lt;code&gt;setExpiration(date)&lt;/code&gt; e em &lt;code&gt;signWith(algoritmo, key)&lt;/code&gt; passei qual algoritmo deve ser usado, nesse caso utilizei &lt;code&gt;HS256&lt;/code&gt;(você pode ver a lista de algoritmos que a biblioteca suporta aqui), e a chave de assinatura do app( que foi gerado por &lt;code&gt;MacProvider.generateKey()&lt;/code&gt;). Para gerar a String com o valor do token usei o metodo &lt;code&gt;.compact()&lt;/code&gt; que gera algo parecido com isso:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4&lt;br&gt;gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Recuperando-a-informacao-que-foi-codificada&quot;&gt;&lt;a href=&quot;#Recuperando-a-informacao-que-foi-codificada&quot; class=&quot;headerlink&quot; title=&quot;Recuperando a informação que foi codificada&quot;&gt;&lt;/a&gt;Recuperando a informação que foi codificada&lt;/h2&gt;&lt;p&gt;Para recuperar a informação que foi codificada também utilizei os métodos estáticos da classe &lt;code&gt;Jwts&lt;/code&gt;.&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;String email = Jwts.parser().setSigningKey(key).parseClaimsJws(token).getBody().getSubject();&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Em &lt;code&gt;setSigningKey(key)&lt;/code&gt; passei a mesma key que utilizei para gerar o token e em &lt;code&gt;parseClaimsJws(token)&lt;/code&gt; passei a String com o token. O método &lt;code&gt;getBody()&lt;/code&gt; vai retornar um objeto como todos os dados token e utilizei &lt;code&gt;setSubject()&lt;/code&gt; para receber a informação que foi codificada, nesse caso o email do usuário.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Se tentar recuperar a informação após a data de validade do token será retornado uma Exception informando que a o token expirou. Certifique-se que está tratando isto.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Utilizando-Cookies-para-salvar-o-token-gerado-no-navegador-do-usuario&quot;&gt;&lt;a href=&quot;#Utilizando-Cookies-para-salvar-o-token-gerado-no-navegador-do-usuario&quot; class=&quot;headerlink&quot; title=&quot;Utilizando Cookies para salvar o token gerado no navegador do usuário.&quot;&gt;&lt;/a&gt;Utilizando Cookies para salvar o token gerado no navegador do usuário.&lt;/h2&gt;&lt;p&gt;Utilizei Cookies para salvar o token no navegador. Após o cadastro ou login de um usuário o token é enviado para ser armazenado em um cookie no navegador. Sempre que o usuário enviar uma requisição para o servidor o token armazenado é enviado na requisição. Enviei o token atráves da URL(como &lt;code&gt;/?t=yJhbGciOiJIUzI1NiIsI…&lt;/code&gt; ou &lt;code&gt;/:token&lt;/code&gt;) e valido a requisição verificando se o token ainda é valido.&lt;br&gt;Para enviar um token para ser salvo nos cookies do navegador você pode fazer assim:&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;response().setCookie(Http.Cookie.builder(&lt;span class=&quot;string&quot;&gt;&quot;authToken&quot;&lt;/span&gt;, token).build());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ok(Json.toJson(&lt;span class=&quot;string&quot;&gt;&quot;Token armazenado nos Cookies em chave valor authToken:&quot;&lt;/span&gt; + token));&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Para receber o token de uma requisição enviada pelo usuário, pegando do &lt;code&gt;HEADER&lt;/code&gt; da requisição:&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;request().cookies().get(&lt;span class=&quot;string&quot;&gt;&quot;authToken&quot;&lt;/span&gt;).value();&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Se você passou por URL, utilize o método de recuperar informação referente ao método que você utilizou para passar o token.&lt;br&gt;Para remover um token dos cookies:&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;response().discardCookie(&lt;span class=&quot;string&quot;&gt;&quot;authToken&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ok(Json.toJson(&lt;span class=&quot;string&quot;&gt;&quot;Token removido dos cookies&quot;&lt;/span&gt;));&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Código de exemplo de algumas operações utilizando Token e Cookie:&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String AUTH_TOKEN = &lt;span class=&quot;string&quot;&gt;&quot;authToken&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Key key = MacProvider.generateKey();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Result &lt;span class=&quot;title&quot;&gt;register&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String email)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	Date dateNow = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Date();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	Date expires = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Date(dateNow.getTime() + &lt;span class=&quot;number&quot;&gt;86400000&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		String token = Jwts.builder().setSubject(email).signWith(SignatureAlgorithm.HS256, key).setExpiration(expires).compact();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		response().setCookie(Http.Cookie.builder(AUTH_TOKEN, token).build());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ok(Json.toJson(&lt;span class=&quot;string&quot;&gt;&quot;Usuario criado com sucesso&quot;&lt;/span&gt;));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Exception e) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		Logger.info(&lt;span class=&quot;string&quot;&gt;&quot;400 - &quot;&lt;/span&gt; + e.getMessage());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; status(&lt;span class=&quot;number&quot;&gt;400&lt;/span&gt;, e.getMessage());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Se a validade do token tiver expirado será lançado uma &#39;exception&#39; e o metodo ira retornar um &#39;401&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Result &lt;span class=&quot;title&quot;&gt;loginWithToken&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String token)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		String email = Jwts.parser().setSigningKey(key).parseClaimsJws(token).getBody().getSubject();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ok(Json.toJson(email));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Exception e)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		response().discardCookie(AUTH_TOKEN);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; status(&lt;span class=&quot;number&quot;&gt;401&lt;/span&gt;, e.getMessage());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Result &lt;span class=&quot;title&quot;&gt;logout&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	response().discardCookie(AUTH_TOKEN);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; redirect(&lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// para url com &#39;?t=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gR...&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Result &lt;span class=&quot;title&quot;&gt;getList&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	String token = request().getQueryString(&lt;span class=&quot;string&quot;&gt;&quot;t&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		String userEmail = Jwts.parser().setSigningKey(key).parseClaimsJws(token).getBody().getSubject();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		List list = getListByEmail(userEmail);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ok(Json.toJson(list));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Exception e) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		Logger.info(&lt;span class=&quot;string&quot;&gt;&quot;400 - &quot;&lt;/span&gt; + e.getMessage());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; status(&lt;span class=&quot;number&quot;&gt;400&lt;/span&gt;, e.getMessage());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Trabalhando em um projeto da universidade fiquei responsável por desenvolver a autenticação de usuários por token em uma REST API. Escolh
    
    </summary>
    
      <category term="java" scheme="http://ribeirojpn.github.io/categories/java/"/>
    
    
      <category term="java" scheme="http://ribeirojpn.github.io/tags/java/"/>
    
      <category term="jwt" scheme="http://ribeirojpn.github.io/tags/jwt/"/>
    
  </entry>
  
  <entry>
    <title>Variáveis, Hoisting, Closures e IIFE em Javascript</title>
    <link href="http://ribeirojpn.github.io/javascript/Javascript-Hoisting-Closures/"/>
    <id>http://ribeirojpn.github.io/javascript/Javascript-Hoisting-Closures/</id>
    <published>2015-11-15T18:56:12.000Z</published>
    <updated>2016-07-05T03:08:06.060Z</updated>
    
    <content type="html">&lt;p&gt;Nesse artigo irei abordar rapidamente alguns conceitos básicos mas essenciais da linguagem Javascript. Vou apresentar 5 conceitos muito importantes sobre como criar e instanciar variáveis e funções, são eles: Hoisting, Closure, Variável Global, Variável por parâmetro e IIFE.&lt;/p&gt;
&lt;h2 id=&quot;Hoisting&quot;&gt;&lt;a href=&quot;#Hoisting&quot; class=&quot;headerlink&quot; title=&quot;Hoisting&quot;&gt;&lt;/a&gt;Hoisting&lt;/h2&gt;&lt;p&gt;O Javascript possui o comportamento de mover a declaração de uma variável ou função para o topo do escopo, o que significa que você pode usar uma função ou variável antes dela ter sido declarada. O que acontece é que as declarações de variáveis e funções são processadas antes que qualquer outro código seja executado, transformando este código:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;run();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;Run, Forrest, run!&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// vai imprimir -&amp;gt; Run, Forrest, run!&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;neste:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;Run, Forrest, run!&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;run(); &lt;span class=&quot;comment&quot;&gt;// imprime &#39;Run, Forrest, run!&#39;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Isto possibilita que você utilize funções dentro de outras funções mantendo uma organização que mais lhe agrade. Um exemplo que costumo fazer é colocar o &lt;code&gt;sets&lt;/code&gt; e &lt;code&gt;gets&lt;/code&gt; sempre como as ultimas funções no arquivo (me acostumei a fazer assim programando em &lt;code&gt;Java&lt;/code&gt; ^^ ):&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; carro = &amp;#123;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;meuCarro&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;marca, portas&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  setMarca(marca);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  setNumeroDePortas(portas);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setMarca&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;nomeDaMarca&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  carro.marca = nomeDaMarca;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setNumeroDePortas&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;numeroDePortas&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  carro.portas = numeroDePortas;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;meuCarro(&lt;span class=&quot;string&quot;&gt;&quot;fiat&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(carro.marca); &lt;span class=&quot;comment&quot;&gt;// imprime &#39;fiat&#39;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;No caso de variáveis, se você inicializar a mesma após ter sido utilizada, o hoisting acontecerá porem a variável terá valor &lt;code&gt;undefined&lt;/code&gt; pois no momento da execução a variável já foi declarada, mas ainda não foi inicializada.&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(vader); &lt;span class=&quot;comment&quot;&gt;// imprime &#39;undefined&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;vader = &lt;span class=&quot;string&quot;&gt;&quot;I am your father&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; vader;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;esse código se transforma neste:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; vader; &lt;span class=&quot;comment&quot;&gt;// variavel declarada mas não inicializada&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(vader); &lt;span class=&quot;comment&quot;&gt;// imprime &#39;undefined&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;vader = &lt;span class=&quot;string&quot;&gt;&quot;I am your father&quot;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// inicialização da variável após ter sido usada no log.&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Closures&quot;&gt;&lt;a href=&quot;#Closures&quot; class=&quot;headerlink&quot; title=&quot;Closures&quot;&gt;&lt;/a&gt;Closures&lt;/h2&gt;&lt;p&gt;Closures são funções dentro de outras funções que possuem acesso a variaveis da função a qual está inserido. Elas possuem três escopos acessiveis: o proprio escopo, escopo da função em que está inserido e o escopo global. Isto significa que, alem de ter acesso as variaveis declaradas nestes escopos, os Closures tambem possuem acesso aos argumentos passados na função a qual está inserido. Um exemplo pra ficar mais fácil de compreender:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; carro = &amp;#123;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;meuCarro&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;nomeDaMarca, numeroDePortas&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setMarca&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    carro.marca = nomeDaMarca;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setNumeroDePortas&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    carro.portas = numeroDePortas;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;mostrarCarro&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;Carro da &quot;&lt;/span&gt; + nomeDaMarca + &lt;span class=&quot;string&quot;&gt;&quot; de &quot;&lt;/span&gt; + numeroDePortas + &lt;span class=&quot;string&quot;&gt;&quot; portas.&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  setMarca();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  setNumeroDePortas();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  mostrarCarro();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;meuCarro(&lt;span class=&quot;string&quot;&gt;&quot;fiat&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// imprime &#39;Carro da fiat de 2 portas.&#39;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Como Javascript não oferece formas de declarar metodos privados como outras linguagens como Java(utilizando &lt;code&gt;private&lt;/code&gt; na declaração de um metodo), você pode utilizar closures para emular metodos privados. Veja um exemplo utilizando, mais uma vez, o exemplo do ‘meuCarro’:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; meuCarro = (&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; carro = &amp;#123; velocidade: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;vel&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;valor&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    carro.velocidade += valor;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    acelerar: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      vel(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    reduzir: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      vel(&lt;span class=&quot;number&quot;&gt;-10&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    velocidadeAtual: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; carro.velocidade;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;)();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(meuCarro.velocidadeAtual()); &lt;span class=&quot;comment&quot;&gt;// imprime &#39;0&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;meuCarro.acelerar();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(meuCarro.velocidadeAtual()); &lt;span class=&quot;comment&quot;&gt;// imprime &#39;10&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;meuCarro.acelerar();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;meuCarro.acelerar();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(meuCarro.velocidadeAtual()); &lt;span class=&quot;comment&quot;&gt;// imprime &#39;30&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;meuCarro.reduzir();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(meuCarro.velocidadeAtual()); &lt;span class=&quot;comment&quot;&gt;// imprime &#39;20&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;meuCarro.vel(&lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// &#39;TypeError: meuCarro.vel is not a function&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(meuCarro.velocidadeAtual()); &lt;span class=&quot;comment&quot;&gt;// imprime &#39;20&#39;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;O método &lt;code&gt;vel(valor)&lt;/code&gt; só pode ser utilizado dentro do escopo de &lt;code&gt;meuCarro&lt;/code&gt; tornando assim um método privado.&lt;/p&gt;
&lt;h2 id=&quot;Variavel-Global&quot;&gt;&lt;a href=&quot;#Variavel-Global&quot; class=&quot;headerlink&quot; title=&quot;Variável Global&quot;&gt;&lt;/a&gt;Variável Global&lt;/h2&gt;&lt;p&gt;Variáveis Globais são variáveis que são declaradas fora de uma função. Essas variáveis podem ser acessadas e alteradas dentro de qualquer função, ficando disponível para todo o documento.&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; vader = &lt;span class=&quot;string&quot;&gt;&quot;I am your father&quot;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// variavel global&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;change&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;str&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  vader = str;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;speak&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(vader);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;speak(); &lt;span class=&quot;comment&quot;&gt;// imprie &#39;I am your father&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;change(&lt;span class=&quot;string&quot;&gt;&quot;Come to the dark side&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;speak(); &lt;span class=&quot;comment&quot;&gt;// imprime &#39;Come to the dark side&#39;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Quando iniciamos uma variável dentro de uma função sem declará-la, essa variável se torna uma Variável Global.&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;change&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;str&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  vader = str;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;speak&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(vader);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;speak(); &lt;span class=&quot;comment&quot;&gt;// &#39;ReferenceError: vader is not defined&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;change(&lt;span class=&quot;string&quot;&gt;&quot;Come to the dark side&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;speak(); &lt;span class=&quot;comment&quot;&gt;// imprime &#39;Come to the dark side&#39;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;A ultima chamada da função &lt;code&gt;speak()&lt;/code&gt; imprime ‘Come to the dark side’ porque a variável &lt;code&gt;vader&lt;/code&gt; inicializada em &lt;code&gt;change(str)&lt;/code&gt; se torna global por passar pelo processo de &lt;a href=&quot;#hoisting&quot;&gt;Hoisting&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Variavel-por-Parametro&quot;&gt;&lt;a href=&quot;#Variavel-por-Parametro&quot; class=&quot;headerlink&quot; title=&quot;Variável por Parâmetro&quot;&gt;&lt;/a&gt;Variável por Parâmetro&lt;/h2&gt;&lt;p&gt;Parâmetros são valores passados como recurso para uma função, são atribuídos a variáveis locais no escopo da função. Quando uma variável global é passada como parâmetro, apenas o valor da variável é recebida pela função.&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; x = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;change&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;num&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  num = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; num;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(change(x)); &lt;span class=&quot;comment&quot;&gt;// imprime 2 retornado pelo função change(x)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(x)/ &lt;span class=&quot;comment&quot;&gt;// imprime 10, valor de x no escopo global&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;changeX&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;x&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  x = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; x;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(change(x)); &lt;span class=&quot;comment&quot;&gt;// passando variavel global como parametro, imprime 2 retornado pela função change(x)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(x)/ &lt;span class=&quot;comment&quot;&gt;// imprime 10, valor de x no escopo global&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Quando você passa uma Variável Global como parâmetro de uma função o seu valor é atribuído a uma variável local. No segundo exemplo é criada uma variável “x” no escopo local que recebe o valor da variável global “x”, quando altero o valor de x dentro de &lt;code&gt;change(x)&lt;/code&gt; estou alterando apenas o valor da variável local. Para alterar a variável global preciso que não seja criada uma variável com mesmo nome dentro do escopo local:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; x = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; newValue = &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;change&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;num&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  x = num;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; x;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;change(newValue); &lt;span class=&quot;comment&quot;&gt;// retorna 5&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(x)/ &lt;span class=&quot;comment&quot;&gt;// imprime 5, novo valor de x no escopo global&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Instanciacao-usando-uma-IIFE&quot;&gt;&lt;a href=&quot;#Instanciacao-usando-uma-IIFE&quot; class=&quot;headerlink&quot; title=&quot;Instanciação usando uma IIFE&quot;&gt;&lt;/a&gt;Instanciação usando uma IIFE&lt;/h2&gt;&lt;p&gt;IIFE é uma sigla para “Immediately-Invoked Function Expression” que em português&lt;br&gt;pode ser chamado de “Definição de Função Imediatamente Executável”. São funções que são executadas no mesmo momento em que são definidas. Utilizar IIFE pode ser muito útil quando não queremos que códigos javascript de outras pessoas acessem ou alterem as variáveis que definimos.&lt;/p&gt;
&lt;p&gt;Exemplo:&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;str&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; vader = str;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(vader);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;(&lt;span class=&quot;string&quot;&gt;&#39;I need a friend...&#39;&lt;/span&gt;)); &lt;span class=&quot;comment&quot;&gt;// imprime &#39;I need a friend...&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(vader); &lt;span class=&quot;comment&quot;&gt;// ReferenceError: vader is not defined&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Uma IIFE é declarada inserindo uma função, variável ou operação dentro de parenteses como parâmetros para uma função, que automaticamente retornara o que está entre os parenteses.&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&amp;#125;) &lt;span class=&quot;comment&quot;&gt;// retorna a function() dentro dos parenteses&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&amp;#125;)() &lt;span class=&quot;comment&quot;&gt;// executa a function() dentro dos parenteses&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;*&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;// retorna 20&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;// retorna true&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Em um dos exemplos de &lt;a href=&quot;#closures&quot;&gt;Closures&lt;/a&gt; utilizei uma IIFE para atribuir uma função autoexecutável a uma variável.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Nesse artigo irei abordar rapidamente alguns conceitos básicos mas essenciais da linguagem Javascript. Vou apresentar 5 conceitos muito i
    
    </summary>
    
      <category term="javascript" scheme="http://ribeirojpn.github.io/categories/javascript/"/>
    
    
      <category term="javascript" scheme="http://ribeirojpn.github.io/tags/javascript/"/>
    
      <category term="learn" scheme="http://ribeirojpn.github.io/tags/learn/"/>
    
  </entry>
  
  <entry>
    <title>Estudando Javascript e MEAN Stack</title>
    <link href="http://ribeirojpn.github.io/javascript/estudando-javascript/"/>
    <id>http://ribeirojpn.github.io/javascript/estudando-javascript/</id>
    <published>2015-08-17T21:13:12.000Z</published>
    <updated>2016-07-07T03:22:36.097Z</updated>
    
    <content type="html">&lt;p&gt;Em Maio, o canal &lt;a href=&quot;https://www.youtube.com/user/GoogleDevelopers&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Google Developers&lt;/a&gt; publicou no Youtube uma &lt;a href=&quot;https://www.youtube.com/playlist?list=PLOU2XLYxmsIIQorIS8gagUiMau9S84vZV&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;serie de videos&lt;/a&gt; de um evento sobre Dart, o Dart Developer Summit 2015, entre os diversos videos sobre a nova linguagem de programação há um chamado “Moving from Node.js to Dart” que me chamou atenção, não pelo que mostrou sobre o Dart mas, pelo que mostrou sobre o Node.js que, até então, não conhecia. Enquanto pesquisava sobre o Node.js, me interessei absurdamente pelo desenvolvimento web, pelas possibilidades e em especial pela capacidade de desenvolver toda uma aplicação web usando apenas uma linguagem de programação.&lt;/p&gt;
&lt;p&gt;Atualmente, tenho estudado bastante sobre Javascript e a full-stack MEAN(MongoDB, Express.js, AngularJS e Node.js). Vou citar aqui alguns locais onde busco informações, exercicios e algumas ferramentas que uso no meu dia-a-dia para desenvolver e estudar.&lt;/p&gt;
&lt;h2 id=&quot;Sites&quot;&gt;&lt;a href=&quot;#Sites&quot; class=&quot;headerlink&quot; title=&quot;Sites&quot;&gt;&lt;/a&gt;Sites&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://freecodecamp.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Free Code Camp&lt;/a&gt;  - possui varios exercicios para praticar o que está sendo estudado, o aluno aprende todo o processo de desenvolvimento de uma aplicação web utilizando a MEAN Stack(MongoDB, Express.js, Angular.js, Node.js).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.codeschool.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Code School&lt;/a&gt; - possui um ótimo curso introdutório ao Angular.js gratuito. A versão paga possui tambem cursos, sobre Node.js, Javascript e varias outras linguagens e ferramentas.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.codecademy.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Codecademy&lt;/a&gt; - Curso de HTML,CSS, Javascript e de como uni-los para criar paginas web.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://egghead.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;egghead.io&lt;/a&gt; - possui um grande acervo de videos sobre Javascript e varios de seus frameworks, como: AngularJS, Node.js, React, Grunt, etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://university.mongodb.com/courses/M101JS/about&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MongoDB University&lt;/a&gt; - Curso “M101JS: MongoDB for Node.js Developers”(Em andamento).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Em-Portugues&quot;&gt;&lt;a href=&quot;#Em-Portugues&quot; class=&quot;headerlink&quot; title=&quot;- Em Português&quot;&gt;&lt;/a&gt;- Em Português&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://nodebr.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NodeBR&lt;/a&gt; - blog com varios posts sobre ferramentas para Node.js e como usa-las.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://udgwebdev.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Underground WebDev&lt;/a&gt; - blog escrito por Caio Ribeiro, autor do livro “Aplicações web real-time com Node.js” um extenso conteudo sobre Node.js, Express.js e Meteor.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://nomadev.com.br/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Nomadev&lt;/a&gt; - blog escrito por Suissa(Jean Carlo), evangelista e palestrante Javascript. Conteudo sobre Javascript e MEAN.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Canais-do-Youtube&quot;&gt;&lt;a href=&quot;#Canais-do-Youtube&quot; class=&quot;headerlink&quot; title=&quot;Canais do Youtube&quot;&gt;&lt;/a&gt;Canais do Youtube&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/user/learncodeacademy&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LearnCode.academy&lt;/a&gt; - Javascript, AngularJS, Node.js, etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/channel/UCJbPGzawDH1njbqV-D5HqKw&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;thenewboston&lt;/a&gt; - Tutoriais sobre quase tudo.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/channel/UCO1cgjhGzsSYb1rsB4bFe4Q&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;funfunfunction&lt;/a&gt; - Javascript Funcional, etc.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Em-Portugues-1&quot;&gt;&lt;a href=&quot;#Em-Portugues-1&quot; class=&quot;headerlink&quot; title=&quot;- Em Português&quot;&gt;&lt;/a&gt;- Em Português&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/user/rodrigobranas/videos&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Rodrigo Branas&lt;/a&gt; - Javascript, AngularJS.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/channel/UCKdo1RaF8gzfhvkOdZv_ojg&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Webschool.io&lt;/a&gt; - Curso de Node.js e Curso de Javascript funcional(Em andamento).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/channel/UCd4Cp-rzdSAze6C-FOFQ3aw&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NodeBR&lt;/a&gt; - Canal da comunidade de Node.js do Brasil&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Livros&quot;&gt;&lt;a href=&quot;#Livros&quot; class=&quot;headerlink&quot; title=&quot;Livros&quot;&gt;&lt;/a&gt;Livros&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.amazon.com.br/JavaScript-Definitive-Guide-Activate-Guides-ebook/dp/B004XQX4K0/ref=sr_1_1?s=digital-text&amp;amp;ie=UTF8&amp;amp;qid=1443031364&amp;amp;sr=1-1&amp;amp;keywords=javascript+definitive+guide&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;JavaScript: The Definitive Guide&lt;/a&gt; - David Flanagan, publicado pela O’Reilly Media.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.casadocodigo.com.br/products/livro-mean&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Mean: Full stack JavaScript para aplicações web com MongoDB, Express, Angular e Node&lt;/a&gt; - Flávio Almeida, publicado pela Casa do Codigo.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.amazon.com.br/Professional-Node-js-Building-Javascript-Scalable-ebook/dp/B009L7QETY/ref=sr_1_2?ie=UTF8&amp;amp;qid=1443031249&amp;amp;sr=8-2&amp;amp;keywords=Professional+Node.js&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Professional Node.js&lt;/a&gt; - Pedro Teixeira, publicado pela Wrox.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://novatec.com.br/livros/ninja-javascript/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Segredos do Ninja JavaScript&lt;/a&gt; - John Resig e Bear Bibeault, publicado pela novatec.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;E claro, as documentações: &lt;a href=&quot;https://developer.mozilla.org/pt-BR/docs/Web/JavaScript&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Javascript&lt;/a&gt;, &lt;a href=&quot;https://nodejs.org/documentation/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Node.js&lt;/a&gt;, &lt;a href=&quot;https://docs.angularjs.org/guide&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AngularJS&lt;/a&gt;, &lt;a href=&quot;http://docs.mongodb.org/manual/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MongoDB&lt;/a&gt;, &lt;a href=&quot;http://expressjs.com/4x/api.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Express.js&lt;/a&gt;. Por falar em documentação, o &lt;a href=&quot;http://zealdocs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Zeal&lt;/a&gt; é uma ótima ferramenta que mantem as documentações disponíveis offline no Linux e Windows, ela é baseada no &lt;a href=&quot;https://kapeli.com/dash&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Dash&lt;/a&gt;(disponivel para OS X e iOS).&lt;/p&gt;
&lt;p&gt;Utilizo o editor de texto &lt;a href=&quot;https://atom.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Atom&lt;/a&gt; e os plugins podem ser vistos &lt;a href=&quot;https://atom.io/users/ribeirojpn/stars&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;aqui&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Este é o meu primeiro post, espero que tenham gostado. ^^&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Atualizado em 6 de julho de 2016&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Em Maio, o canal &lt;a href=&quot;https://www.youtube.com/user/GoogleDevelopers&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Google Developers&lt;/a&gt; publicou no
    
    </summary>
    
      <category term="javascript" scheme="http://ribeirojpn.github.io/categories/javascript/"/>
    
    
      <category term="javascript" scheme="http://ribeirojpn.github.io/tags/javascript/"/>
    
      <category term="learn" scheme="http://ribeirojpn.github.io/tags/learn/"/>
    
      <category term="dicas" scheme="http://ribeirojpn.github.io/tags/dicas/"/>
    
  </entry>
  
</feed>
